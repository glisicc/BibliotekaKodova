[{"D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\index.js":"1","D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\App.js":"2","D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\components\\SimpleInput.js":"3","D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\hooks\\use-input.js":"4","D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\components\\BasicForm.js":"5"},{"size":179,"mtime":1648194500000,"results":"6","hashOfConfig":"7"},{"size":162,"mtime":1648194500000,"results":"8","hashOfConfig":"7"},{"size":2178,"mtime":1648194500000,"results":"9","hashOfConfig":"7"},{"size":1121,"mtime":1648194500000,"results":"10","hashOfConfig":"7"},{"size":2937,"mtime":1648194500000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sbthi2",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\index.js",[],"D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\App.js",[],"D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\components\\SimpleInput.js",["24","25"],"import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const [enteredMail, setEnteredMail] = useState(\"\");\n  const [enteredMailTouched, setEnteredMailTouched] = useState(false);\n\n  const enteredMailIsValid = enteredMail.trim() !== \"\";\n\n  let mailInputIsInvalid = !enteredMailIsValid;\n\n  const validRegex =\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  if (!mailInputIsInvalid) {\n    if (enteredMail.match(validRegex)) {\n      mailInputIsInvalid = true;\n    } else {\n      mailInputIsInvalid = false;\n    }\n  }\n\n  let formIsValid = false;\n  if (enteredNameIsValid && mailInputIsInvalid) {\n    formIsValid = true;\n  }\n\n  const mailInputChangeHandler = (event) => {\n    setEnteredMail(event.target.value);\n  };\n  const mailInputBlurHandler = (event) => {\n    setEnteredMailTouched(true);\n  };\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredMailIsValid) {\n      return;\n    }\n\n    // nameInputRef.current.value = \"\"; NOT IDEAL, NOT MANIPULATE DOM WITH VANILA JS\n    setEnteredMail(\"\");\n    setEnteredMailTouched(false);\n  };\n  const nameInputClasses = nameInputError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputError && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={mailInputChangeHandler}\n          onBlur={mailInputBlurHandler}\n          value={enteredMail}\n        />\n        {!mailInputIsInvalid && <p className=\"error-text\">Email is invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["26","27"],"D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\hooks\\use-input.js",[],"D:\\Biblioteka kodova\\WEB\\React\\Learning - React\\Section16-FormsUserInput\\src\\components\\BasicForm.js",[],{"ruleId":"28","severity":1,"message":"29","line":10,"column":12,"nodeType":"30","messageId":"31","endLine":10,"endColumn":26},{"ruleId":"28","severity":1,"message":"32","line":14,"column":10,"nodeType":"30","messageId":"31","endLine":14,"endColumn":28},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'resetNameInput' is assigned a value but never used.","Identifier","unusedVar","'enteredMailTouched' is assigned a value but never used.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]